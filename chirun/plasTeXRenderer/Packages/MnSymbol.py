
# auto-generated

from plasTeX import Macro
from plasTeX.Tokenizer import Other
class LiteralMathSymbol(Macro):
    def invoke(self, tex):
        return [Other(self.str)]


class backcong(LiteralMathSymbol): str = '≌'
class bigcupdot(LiteralMathSymbol): str = '⨃'
class bigsqcap(LiteralMathSymbol): str = '⨅'
class bigtimes(LiteralMathSymbol): str = '⨉'
class boxbox(LiteralMathSymbol): str = '⧈'
class boxslash(LiteralMathSymbol): str = '⧄'
class capdot(LiteralMathSymbol): str = '⩀'
class coloneq(LiteralMathSymbol): str = '≔'
class cupdot(LiteralMathSymbol): str = '⊍'
class dotminus(LiteralMathSymbol): str = '∸'
class downuparrows(LiteralMathSymbol): str = '⇵'
class downupharpoons(LiteralMathSymbol): str = '⥯'
class eqdot(LiteralMathSymbol): str = '⩦'
class iiiint(LiteralMathSymbol): str = '⨌'
class leftrightharpoondownup(LiteralMathSymbol): str = '⥋'
class leftrightharpoonupdown(LiteralMathSymbol): str = '⥊'
class leftslice(LiteralMathSymbol): str = '⪦'
class less(LiteralMathSymbol): str = '<'
class lightning(LiteralMathSymbol): str = '↯'
class llangle(LiteralMathSymbol): str = '⦉'
class llcorner(LiteralMathSymbol): str = '⌞'
class lrcorner(LiteralMathSymbol): str = '⌟'
class minus(LiteralMathSymbol): str = '−'
class minusdot(LiteralMathSymbol): str = '⨪'
class napprox(LiteralMathSymbol): str = '≉'
class Nearrow(LiteralMathSymbol): str = '⇗'
class nequiv(LiteralMathSymbol): str = '≢'
class neswarrow(LiteralMathSymbol): str = '⤢'
class ngtrless(LiteralMathSymbol): str = '≹'
class nin(LiteralMathSymbol): str = '∉'
class nlessgtr(LiteralMathSymbol): str = '≸'
class npreccurlyeq(LiteralMathSymbol): str = '⋠'
class nsimeq(LiteralMathSymbol): str = '≄'
class nsqsubseteq(LiteralMathSymbol): str = '⋢'
class nsqsupseteq(LiteralMathSymbol): str = '⋣'
class nsubset(LiteralMathSymbol): str = '⊄'
class nsucccurlyeq(LiteralMathSymbol): str = '⋡'
class nsupset(LiteralMathSymbol): str = '⊅'
class Nwarrow(LiteralMathSymbol): str = '⇖'
class nwsearrow(LiteralMathSymbol): str = '⤡'
class ocirc(LiteralMathSymbol): str = '̊'
class oiint(LiteralMathSymbol): str = '∯'
class plus(LiteralMathSymbol): str = '+'
class rightslice(LiteralMathSymbol): str = '⪧'
class rrangle(LiteralMathSymbol): str = '⦊'
class Searrow(LiteralMathSymbol): str = '⇘'
class smalltriangledown(LiteralMathSymbol): str = '▿'
class smalltriangleleft(LiteralMathSymbol): str = '◃'
class smalltriangleright(LiteralMathSymbol): str = '▹'
class smalltriangleup(LiteralMathSymbol): str = '▵'
class sqsubsetneq(LiteralMathSymbol): str = '⋤'
class sqsupsetneq(LiteralMathSymbol): str = '⋥'
class sumint(LiteralMathSymbol): str = '⨋'
class Swarrow(LiteralMathSymbol): str = '⇙'
class twoheaddownarrow(LiteralMathSymbol): str = '↡'
class twoheaduparrow(LiteralMathSymbol): str = '↟'
class ulcorner(LiteralMathSymbol): str = '⌜'
class updownarrows(LiteralMathSymbol): str = '⇅'
class updownharpoonleftright(LiteralMathSymbol): str = '⥍'
class updownharpoonrightleft(LiteralMathSymbol): str = '⥌'
class updownharpoons(LiteralMathSymbol): str = '⥮'
class urcorner(LiteralMathSymbol): str = '⌝'
class veedot(LiteralMathSymbol): str = '⟇'
class wedgedot(LiteralMathSymbol): str = '⟑'
